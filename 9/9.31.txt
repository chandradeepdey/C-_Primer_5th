it won't work on list or forward_list because iterator arithmetic is unsupported in those cases

std::list<int> lst{0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
for (auto iter = lst.begin(), end = lst.end(); iter != end;) { // end isn't invalidated
    if (*iter % 2) {
        lst.insert(iter, *iter); // iter isn't invalidated
        ++iter;
    } else
        iter = lst.erase(iter); // invalidates iter, assign new iter
}
for (auto n : lst)
    std::cout << n << ' ';
std::cout << '\n';

std::forward_list<int> flst{0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
for (auto prev = flst.before_begin(), curr = flst.begin(), end = flst.end();
     curr != end;) { // end isn't invalidated
    if (*curr % 2) {
        flst.insert_after(prev, *curr); // iterators aren't invalidated
        prev = curr;
        ++curr;
    } else {
        curr = flst.erase_after(prev); // invalidates curr, reassigned
    }
}
