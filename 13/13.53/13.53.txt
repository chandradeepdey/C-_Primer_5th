when copy-and-swap is used, copy assignment calls
HasPtr(const HasPtr &other);
HasPtr &operator=(HasPtr other);
void swap(HasPtr &left, HasPtr &right);
swap(std::string *&lhs, std::string *&rhs);
swap(int &lhs, int &rhs);
~HasPtr();

when copy-and-swap is used, move assignment calls
HasPtr(HasPtr &&other) noexcept;
HasPtr &operator=(HasPtr other);
void swap(HasPtr &left, HasPtr &right);
swap(std::string *&lhs, std::string *&rhs);
swap(int &lhs, int &rhs);
~HasPtr();

when copy-assignment operator is used, copy assignment calls
HasPtr &operator=(const HasPtr &other);

when move-assignment operator is used, move assignment calls
HasPtr &operator=(HasPtr &&other) noexcept;

clearly, having the individual operators is better.
